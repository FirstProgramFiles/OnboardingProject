const { PrismaClient } = require('../src/generated/prisma');

const prisma = new PrismaClient();

async function seedReferenceData() {
  try {
    console.log('üå± Seeding reference data...');

    // Seed departments
    const departments = [
      { name: '–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–¥–µ–ª' },
      { name: '–û—Ç–¥–µ–ª –ò–¢' },
      { name: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è' },
      { name: '–û—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤' },
      { name: '–û—Ç–¥–µ–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏' },
      { name: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª' }
    ];

    for (const dept of departments) {
      await prisma.department.upsert({
        where: { name: dept.name },
        update: {},
        create: dept
      });
    }
    console.log('‚úÖ Departments seeded');

    // Seed positions
    const positions = [
      { name: '–ò–Ω–∂–µ–Ω–µ—Ä' },
      { name: '–†–∞–±–æ—á–∏–π' },
      { name: '–ú–µ–Ω–µ–¥–∂–µ—Ä' },
      { name: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä' },
      { name: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç' },
      { name: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞' }
    ];

    for (const pos of positions) {
      await prisma.position.upsert({
        where: { name: pos.name },
        update: {},
        create: pos
      });
    }
    console.log('‚úÖ Positions seeded');

    // Seed onboarding stages with real company structure
    const stages = [
      { name: '1. –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂–µ–π', description: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', order: 1, category: '–û–±—â–∞—è' },
      { name: '2. –ò–∑—É—á–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π', description: '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞ –∏ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', order: 2, category: '–û–±—â–∞—è' },
      { name: '3. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–∞', description: '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–∞ –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ', order: 3, category: '–û–±—â–∞—è' },
      { name: '4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–µ—Ü–æ–¥–µ–∂–¥—ã', description: '–°–ø–µ—Ü–æ–¥–µ–∂–¥–∞ –¥–ª—è —Ä–∞–±–æ—á–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞', order: 4, category: '–†–∞–±–æ—á–∏–µ' },
      { name: '5. –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –±–∞–∑–∞', description: '–ò–∑—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏', order: 5, category: '–û–±—â–∞—è' },
      { name: '6. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è', description: '–î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–±–æ—á–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞', order: 6, category: '–†–∞–±–æ—á–∏–µ' },
      { name: '7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π', description: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', order: 7, category: '–û–±—â–∞—è' },
      { name: '8. –ü–æ–ª—É—á–µ–Ω–∏–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è', description: '–£–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–Ω–∞–Ω–∏–π', order: 8, category: '–†–∞–±–æ—á–∏–µ' },
      { name: '9. –ö–∞—Ä—Ç–∞ –ö–ü–≠–∏–ö–ü', description: '–ö–∞—Ä—Ç–∞ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –¥–ª—è –ò–¢–†', order: 9, category: '–ò–¢–†' }
    ];

    const stageRecords = {};
    for (const stage of stages) {
      const record = await prisma.onboardingStage.upsert({
        where: { name: stage.name },
        update: {},
        create: stage
      });
      stageRecords[stage.name] = record;
    }
    console.log('‚úÖ Onboarding stages seeded');

    // Seed onboarding tasks with real company requirements
    const onboardingTasks = [
      // 1. –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂–µ–π
      { 
        title: '–ò–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂ –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞', 
        description: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂ –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞', 
        stage: '1. –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂–µ–π', 
        category: '–û–±—â–∞—è', 
        order: 1 
      },
      { 
        title: '–ò–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂ –ø–æ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', 
        description: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂ –ø–æ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', 
        stage: '1. –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂–µ–π', 
        category: '–û–±—â–∞—è', 
        order: 2 
      },
      { 
        title: '–ò–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂ –ø–æ –ì–û', 
        description: '–ò–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂ –ø–æ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–π –æ–±–æ—Ä–æ–Ω–µ', 
        stage: '1. –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂–µ–π', 
        category: '–û–±—â–∞—è', 
        order: 3 
      },
      { 
        title: '–ü–µ—Ä–≤–∏—á–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂ –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ', 
        description: '–ò–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –º–µ—Ç–æ–¥–∞–º —Ä–∞–±–æ—Ç—ã –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ', 
        stage: '1. –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂–µ–π', 
        category: '–û–±—â–∞—è', 
        order: 4 
      },

      // 2. –ò–∑—É—á–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
      { 
        title: '–ò–∑—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞', 
        description: '–ò–∑—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞ (–ø—É—Ç—å —É–∫–∞–∑–∞–Ω –≤ –ø–∏—Å—å–º–µ)', 
        stage: '2. –ò–∑—É—á–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π', 
        category: '–û–±—â–∞—è', 
        order: 1 
      },
      { 
        title: '–ò–∑—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', 
        description: '–ò–∑—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', 
        stage: '2. –ò–∑—É—á–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π', 
        category: '–û–±—â–∞—è', 
        order: 2 
      },
      { 
        title: '–ò–∑—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –û–¢ –∏ –ü–ë –¥–ª—è –¥–æ–ª–∂–Ω–æ—Å—Ç–∏', 
        description: '–ò–∑—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞ –∏ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏', 
        stage: '2. –ò–∑—É—á–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π', 
        category: '–û–±—â–∞—è', 
        order: 3 
      },

      // 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–∞
      { 
        title: '–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫ –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ', 
        description: '–û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (—É–∫–∞–∑–∞—Ç—å –≥–¥–µ –∏ —É –∫–æ–≥–æ)', 
        stage: '3. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–∞', 
        category: '–û–±—â–∞—è', 
        order: 1 
      },

      // 4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–µ—Ü–æ–¥–µ–∂–¥—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–±–æ—á–∏—Ö)
      { 
        title: '–ü–æ–ª—É—á–∏—Ç—å —Å–ø–µ—Ü–æ–¥–µ–∂–¥—É', 
        description: '–ü–æ–ª—É—á–∏—Ç—å —Å–ø–µ—Ü–æ–¥–µ–∂–¥—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–æ—Ä–º–∞–º–∏ –≤—ã–¥–∞—á–∏', 
        stage: '4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–µ—Ü–æ–¥–µ–∂–¥—ã', 
        category: '–†–∞–±–æ—á–∏–µ', 
        order: 1 
      },

      // 5. –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –±–∞–∑–∞
      { 
        title: '–ò–∑—É—á–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã–π –¥–æ–≥–æ–≤–æ—Ä', 
        description: '–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã–º –¥–æ–≥–æ–≤–æ—Ä–æ–º –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è', 
        stage: '5. –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –±–∞–∑–∞', 
        category: '–û–±—â–∞—è', 
        order: 1 
      },
      { 
        title: '–ò–∑—É—á–∏—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é', 
        description: '–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –ø–æ –∑–∞–Ω–∏–º–∞–µ–º–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏', 
        stage: '5. –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –±–∞–∑–∞', 
        category: '–û–±—â–∞—è', 
        order: 2 
      },
      { 
        title: '–ò–∑—É—á–∏—Ç—å –º–µ—Ç–æ–¥–∏–∫—É –æ–ø–ª–∞—Ç—ã', 
        description: '–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–µ—Ç–æ–¥–∏–∫–æ–π –æ–ø–ª–∞—Ç—ã —Ç—Ä—É–¥–∞ –∏ –ø—Ä–µ–º–∏—Ä–æ–≤–∞–Ω–∏—è', 
        stage: '5. –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –±–∞–∑–∞', 
        category: '–û–±—â–∞—è', 
        order: 3 
      },

      // 6. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–±–æ—á–∏—Ö)
      { 
        title: '–ü—Ä–æ–π—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è', 
        description: '–ü—Ä–æ–π—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –æ–ø—ã—Ç–Ω–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞', 
        stage: '6. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è', 
        category: '–†–∞–±–æ—á–∏–µ', 
        order: 1 
      },

      // 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π
      { 
        title: '–ü—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –∑–Ω–∞–Ω–∏–π', 
        description: '–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ç—Ä—É–¥–∞ (–¥–æ–∫—É–º–µ–Ω—Ç —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏)', 
        stage: '7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π', 
        category: '–û–±—â–∞—è', 
        order: 1 
      },

      // 8. –ü–æ–ª—É—á–µ–Ω–∏–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–±–æ—á–∏—Ö)
      { 
        title: '–ü–æ–ª—É—á–∏—Ç—å —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–Ω–∞–Ω–∏–π', 
        description: '–ü–æ–ª—É—á–∏—Ç—å —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–Ω–∞–Ω–∏–π –∏ –¥–æ–ø—É—Å–∫–µ –∫ —Ä–∞–±–æ—Ç–µ', 
        stage: '8. –ü–æ–ª—É—á–µ–Ω–∏–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è', 
        category: '–†–∞–±–æ—á–∏–µ', 
        order: 1 
      },

      // 9. –ö–∞—Ä—Ç–∞ –ö–ü–≠–∏–ö–ü (—Ç–æ–ª—å–∫–æ –¥–ª—è –ò–¢–†)
      { 
        title: '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∫–∞—Ä—Ç—É –ö–ü–≠–∏–ö–ü', 
        description: '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∫–∞—Ä—Ç—É –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã', 
        stage: '9. –ö–∞—Ä—Ç–∞ –ö–ü–≠–∏–ö–ü', 
        category: '–ò–¢–†', 
        order: 1 
      }
    ];

    for (const task of onboardingTasks) {
      await prisma.task.upsert({
        where: { title: task.title },
        update: {},
        create: {
          title: task.title,
          description: task.description,
          stageId: stageRecords[task.stage].id,
          category: task.category,
          order: task.order,
          isGlobal: true
        }
      });
    }
    console.log('‚úÖ Onboarding tasks with real company structure seeded');

    console.log('üéâ Reference data seeding completed!');
  } catch (error) {
    console.error('‚ùå Error seeding reference data:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seedReferenceData(); 