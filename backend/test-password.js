const { PrismaClient } = require('./src/generated/prisma');
const bcrypt = require('bcryptjs');

const prisma = new PrismaClient();

async function testPassword() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è admin@example.com...\n');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
    const user = await prisma.user.findUnique({
      where: { email: 'admin@example.com' },
      include: { role: true }
    });

    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin@example.com –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      return;
    }

    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.email}`);
    console.log(`üîë –•–µ—à –ø–∞—Ä–æ–ª—è –≤ –±–∞–∑–µ: ${user.password}`);
    console.log(`üë§ –†–æ–ª—å: ${user.role?.name}\n`);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
    const testPassword = 'admin123';
    const isCorrectPassword = await bcrypt.compare(testPassword, user.password);
    
    console.log(`üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å: "${testPassword}"`);
    console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: ${isCorrectPassword}\n`);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
    const wrongPassword = 'wrongpassword';
    const isWrongPassword = await bcrypt.compare(wrongPassword, user.password);
    
    console.log(`üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å: "${wrongPassword}"`);
    console.log(`‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: ${isWrongPassword}\n`);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ö–µ—à –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const newHash = await bcrypt.hash(testPassword, 10);
    console.log(`üîÑ –ù–æ–≤—ã–π —Ö–µ—à –¥–ª—è "${testPassword}": ${newHash}`);
    
    const isNewHashCorrect = await bcrypt.compare(testPassword, newHash);
    console.log(`‚úÖ –ù–æ–≤—ã–π —Ö–µ—à —Ä–∞–±–æ—Ç–∞–µ—Ç: ${isNewHashCorrect}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞—Ä–æ–ª—è:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testPassword(); 